name: Deploy and Configure

on:
  push:
    branches: [ main ]

jobs:
  # terraform:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: hashicorp/setup-terraform@v3
  #     - name: Set Azure Credentials
  #       run: |
  #         echo "${{ secrets.AZURE_CREDENTIALS }}" > azure_credentials.json
  #         echo "ARM_CLIENT_ID=${{ fromJSON(secrets.AZURE_CREDENTIALS).clientId }}" >> $GITHUB_ENV
  #         echo "ARM_CLIENT_SECRET=${{ fromJSON(secrets.AZURE_CREDENTIALS).clientSecret }}" >> $GITHUB_ENV
  #         echo "ARM_TENANT_ID=${{ fromJSON(secrets.AZURE_CREDENTIALS).tenantId }}" >> $GITHUB_ENV
  #     - name: Azure Login
  #       run: az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
  #       env:
  #         ARM_CLIENT_ID: ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientId }}
  #         ARM_CLIENT_SECRET: ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientSecret }}
  #         ARM_TENANT_ID: ${{ fromJSON(secrets.AZURE_CREDENTIALS).tenantId }}
  #     - name: Terraform Init
  #       run: terraform init -upgrade
  #       working-directory: terraform
  #     - name: Terraform Plan
  #       run: terraform plan -out=tfplan
  #       working-directory: terraform
  #     - name: Terraform Apply
  #       run: terraform apply -auto-approve tfplan
  #       working-directory: terraform
  #     - name: Get IP
  #       id: ip
  #       run: echo "ip=$(terraform output -raw public_ip)" >> $GITHUB_OUTPUT
  #       working-directory: terraform

  ansible:
    # needs: terraform
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Ansible
        run: sudo apt update && sudo apt install ansible -y
      - name: Update Inventory
        run: echo "[vm]\n${{ needs.terraform.outputs.ip }} ansible_user=${{ fromJSON(secrets.VM_CREDENTIALS).vmUser }} ansible_ssh_pass=${{ fromJSON(secrets.VM_CREDENTIALS).vmPassword }}" > ansible/inventory.ini
      - name: Run Ansible Playbook
        run: ansible-playbook -i ansible/inventory.ini ansible/playbook.yml
        env:
          POSTGRES_DB: ${{ fromJSON(secrets.ANSIBLE_SECRETS).postgresDb }}
          POSTGRES_USER: ${{ fromJSON(secrets.ANSIBLE_SECRETS).postgresUser }}
          POSTGRES_PASSWORD: ${{ fromJSON(secrets.ANSIBLE_SECRETS).postgresPassword }}
	        KC_DB: ${{ fromJSON(secrets.ANSIBLE_SECRETS).kcDb }}
          KC_DB_URL: jdbc:postgresql://postgres/keycloak
          KC_DB_USERNAME: ${{ fromJSON(secrets.ANSIBLE_SECRETS).kcUser }}
          KC_DB_PASSWORD: ${{ fromJSON(secrets.ANSIBLE_SECRETS).kcPassword }}
          KEYCLOAK_ADMIN: ${{ fromJSON(secrets.ANSIBLE_SECRETS).kcAdmin }}
          KEYCLOAK_ADMIN_PASSWORD: ${{ fromJSON(secrets.ANSIBLE_SECRETS).kcAdminPassword }}
          VM_IP: ${{ needs.terraform.outputs.ip }}
          CLIENT_SECRET: ${{ fromJSON(secrets.ANSIBLE_SECRETS).clientSecret }}
          COOKIE_SECRET: ${{ fromJSON(secrets.ANSIBLE_SECRETS).cookieSecret }}